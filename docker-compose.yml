version: "3.8"

services:
  game_backend:
    container_name: game_backend
    build: .
    image: game_backend_image
    ports:
      - "8000:8000"
    env_file:
      - .env.development
    depends_on:
      - redis
      - mysql
      - kafka
    environment:
      DATABASE_URL: mysql://root:@mysql_db:3306/study_kafka?schema=public
      REDIS_HOST: redis_server
      REDIS_USERNAME: default
      REDIS_PASSWORD:
      REDIS_PORT: 6379
      KAFKA_HOST: kafka:9092
    networks:
      - mynetwork

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: game_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -e 'SHOW DATABASES;'"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - mynetwork

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - mynetwork

volumes:
  mysql_data:
  redis_data:

networks:
  mynetwork:
